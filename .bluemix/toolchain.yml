---
name: "Cloud-native Toolchain for Microservices"
description: "With this cloud-native toolchain, you use a sample to create an online store that consists of three microservices: a Catalog API, an Orders API, and a UI that calls both of the APIs. The toolchain is preconfigured for continuous delivery, source control, blue-green deployment, functional testing, issue tracking, online editing, and deployment risk analytics.\n\nTo get started, click **Create**."
version: 0.2
image: data:image/png;base64,$file(dra-toolchain2.png,base64)
required:
 - deploy
 - github

# Github repos
catalog-api-repo:
  service_id: githubpublic
  parameters:
    repo_name: "{{github.parameters.catalog-api-repo_name}}"
    repo_url: "{{github.parameters.catalog-api-repo_url}}"
    type: clone
    has_issues: false
  hidden: [form, description]

orders-api-repo:
  service_id: githubpublic
  parameters:
    repo_name: "{{github.parameters.orders-api-repo_name}}"
    repo_url: "{{github.parameters.orders-api-repo_url}}"
    type: clone
    has_issues: false
  hidden: [form, description]

ui-repo:
  service_id: githubpublic
  parameters:
    repo_name: "{{github.parameters.ui-repo_name}}"
    repo_url: "{{github.parameters.ui-repo_url}}"
    type: clone
    has_issues: true
  hidden: [form, description]

# Pipelines
ui-build:
  service_id: pipeline
  parameters:
    name: "ui-{{name}}"
    ui-pipeline: true
    configuration:
      content: $file(ui.pipeline.yml)
      env:
        SAUCE_LABS: "test"
        UI_REPO: "ui-repo"
        CF_APP_NAME: "{{deploy.parameters.ui-app-name}}"
        DEV_SPACE_NAME: "{{deploy.parameters.dev-space}}"
        DEV_ORG_NAME: "{{deploy.parameters.dev-organization}}"
        DEV_REGION_ID: "{{deploy.parameters.dev-region}}"
        QA_SPACE_NAME: "{{deploy.parameters.qa-space}}"
        QA_ORG_NAME: "{{deploy.parameters.qa-organization}}"
        QA_REGION_ID: "{{deploy.parameters.qa-region}}"
        PROD_SPACE_NAME: "{{deploy.parameters.prod-space}}"
        PROD_ORG_NAME: "{{deploy.parameters.prod-organization}}"
        PROD_REGION_ID: "{{deploy.parameters.prod-region}}"
      execute: true
    services: ["ui-repo", "test"]
  hidden: [form, description]  

catalog-api-build:
  service_id: pipeline
  parameters:
    name: "catalog-api-{{name}}"
    configuration:
      content: $file(catalog-api.pipeline.yml)
      env:
        SAUCE_LABS: "test"
        CATALOG_API_REPO: "catalog-api-repo"
        CF_APP_NAME: "{{deploy.parameters.catalog-app-name}}"
        DEV_SPACE_NAME: "{{deploy.parameters.dev-space}}"
        DEV_ORG_NAME: "{{deploy.parameters.dev-organization}}"
        DEV_REGION_ID: "{{deploy.parameters.dev-region}}"
        QA_SPACE_NAME: "{{deploy.parameters.qa-space}}"
        QA_ORG_NAME: "{{deploy.parameters.qa-organization}}"
        QA_REGION_ID: "{{deploy.parameters.qa-region}}"
        PROD_SPACE_NAME: "{{deploy.parameters.prod-space}}"
        PROD_ORG_NAME: "{{deploy.parameters.prod-organization}}"
        PROD_REGION_ID: "{{deploy.parameters.prod-region}}"
      execute: true
    services: ["catalog-api-repo", "test"]
  hidden: [form, description]

orders-api-build:
  service_id: pipeline
  parameters:
    name: "orders-api-{{name}}"
    configuration:
      content: $file(order-api.pipeline.yml)
      env:
        SAUCE_LABS: "test"
        ORDER_API_REPO: "orders-api-repo"
        CF_APP_NAME: "{{deploy.parameters.orders-app-name}}"
        DEV_SPACE_NAME: "{{deploy.parameters.dev-space}}"
        DEV_ORG_NAME: "{{deploy.parameters.dev-organization}}"
        DEV_REGION_ID: "{{deploy.parameters.dev-region}}"
        QA_SPACE_NAME: "{{deploy.parameters.qa-space}}"
        QA_ORG_NAME: "{{deploy.parameters.qa-organization}}"
        QA_REGION_ID: "{{deploy.parameters.qa-region}}"
        PROD_SPACE_NAME: "{{deploy.parameters.prod-space}}"
        PROD_ORG_NAME: "{{deploy.parameters.prod-organization}}"
        PROD_REGION_ID: "{{deploy.parameters.prod-region}}"
      execute: true
    services: ["orders-api-repo", "test"]
  hidden: [form, description]

#Deploy Risk Analytics
dra:
  service_id: draservicebroker
  parameters:
    criteria: "{\"name\": \"Unit Test Coverage\", \"stage\": \"unittest\", \"rules\": [{\"name\": \"Unit Test Checks\",\"format\": \"mocha\",\"stage\": \"unittest\",\"percentPass\": 100,\"regressionCheck\": true,\"criticalTests\": []},{\"name\": \"Coverage Test Checks\",\"format\": \"istanbul\",\"stage\": \"code\",\"codeCoverage\": 90,\"regressionCheck\": true}]}"
    criteria: $file("dra-criteria.json")

#Sauce Labs
test:
  service_id: saucelabs
  include: saucelabs.yml

#PagerDuty
alerting:
  service_id: pagerduty
  include: pagerduty.yml
  
#Web IDE
webide:
  service_id: orion
  
#Deployment
deploy:
  schema: deploy.json
  service-category: pipeline
  parameters:
    dev-region: "{{region}}"
    qa-region: "{{region}}"
    prod-region: "{{region}}"
    dev-organization: "{{organization}}"
    qa-organization: "{{organization}}"
    prod-organization: "{{organization}}"
    dev-space: dev
    qa-space: qa
    prod-space: prod
    orders-app-name: "{{orders-api-repo.parameters.repo_name}}"
    catalog-app-name: "{{catalog-api-repo.parameters.repo_name}}"
    ui-app-name: "{{ui-repo.parameters.repo_name}}"

#Github
github:
  schema: github.json
  service-category: githubpublic
  parameters:
    catalog-api-repo_name: "catalog-api-{{name}}"
    catalog-api-repo_url: https://github.com/open-toolchain/Microservices_CatalogAPI
    orders-api-repo_name: "orders-api-{{name}}"
    orders-api-repo_url: https://github.com/open-toolchain/Microservices_OrdersAPI
    ui-repo_name: "ui-{{name}}"
    ui-repo_url: https://github.com/open-toolchain/Microservices_UI
